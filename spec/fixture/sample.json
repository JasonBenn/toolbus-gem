{ 
  "data": [{
    "type": "feature",
    "id": 1,
    "name": "Optimistic locking",
    "module": "ActiveRecord::Locking",
    "search_in": "app/models/**/*rb",
    "search_for": "locking_column = :ANYTHING"
  }, {
    "type": "feature",
    "id": 2,
    "name": "Pessimistic locking",
    "module": "ActiveRecord::Locking",
    "search_in": "app/**/*.rb",
    "search_for": "lock! OR with_lock"
  }, {
    "type": "feature",
    "id": 3,
    "name": "Transactions",
    "module": "ActiveRecord::Transactions",
    "search_in": "app/**/*.rb",
    "search_for": "class ANYTHING < ActiveRecord::Base\nend"
  }, {
    "type": "feature",
    "id": 4,
    "name": "Single table inheritance",
    "module": "ActiveRecord::Transactions",
    "search_in": "app/models/**/*rb",
    "search_for": "ANYTHING < ActiveRecord::Base\nend"
  }, {
    "type": "feature",
    "id": 5,
    "name": "Alternative ActiveRecord initialization patterns",
    "module": "ActiveRecord::Base",
    "search_in": "app/**/*.rb",
    "search_for": "ANYTHING.new {}"
  }, {
    "type": "feature",
    "id": 6,
    "name": "Conditions",
    "module": "ActiveRecord::Base",
    "search_in": "in AP,P",
    "search_for": "where(ANYTHING_MATCHING('?'))"
  }, {
    "type": "feature",
    "id": 7,
    "name": "Saving arrays, hashes, and other non-mappable objects in text columns",
    "module": "ActiveRecord::AttributeMethods::Serialization",
    "search_in": "app/models/**/*rb",
    "search_for": "serialize :ANYTHING"
  }, {
    "type": "feature",
    "id": 8,
    "name": "Connection to multiple databases in different models",
    "module": "ActiveRecord::Base",
    "search_in": "app/**/*.rb",
    "search_for": "MyModel.connection OR ActiveRecord::Base.connection"
  }, {
    "type": "feature",
    "id": 9,
    "name": "Connection to MongoDB",
    "module": "ActiveJob::Enqueuing",
    "search_in": "app/models/**/*rb",
    "search_for": "include Mongoid::Document"
  }, {
    "type": "feature",
    "id": 10,
    "name": "ActiveJob::Enqueueing#enqueue",
    "module": "ActiveJob::Enqueuing",
    "search_in": "app/**/*.rb",
    "search_for": "enqueue"
  }, {
    "type": "feature",
    "id": 11,
    "name": "ActiveJob::Enqueueing#retry_job",
    "module": "ActiveSupport::CoreExt",
    "search_in": "app/jobs/*.rb",
    "search_for": "retry_job"
  }, {
    "type": "feature",
    "id": 12,
    "name": "Benchmarking",
    "module": "ActiveRecord::Inheritance",
    "search_in": "app/**/*.rb",
    "search_for": "Benchmark.ms"
  }]
}
